# File: excelsummary.py

import os
import platform
from openpyxl import Workbook
from openpyxl.styles import Font, Border, Side, Alignment
from openpyxl.utils import get_column_letter
from collections import defaultdict
import time 
import re # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ import re

# ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Excel COM (Windows ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
import win32com.client
import pythoncom

# ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏•‡∏≤‡∏™ Data ‡∏à‡∏≤‡∏Å backend.py
# ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå backend.py ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏•‡∏≤‡∏™ Data ‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏ò‡∏≠‡∏î parse_amount ‡πÅ‡∏•‡∏∞ format_thai_date
from Backend import Data

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡∏õ‡∏¥‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ó‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå Excel ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
def close_excel_file_if_open(filename):
    pythoncom.CoInitialize()  # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å COM ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö thread ‡∏ô‡∏µ‡πâ
    try:
        excel = win32com.client.Dispatch("Excel.Application")
        for wb in excel.Workbooks:
            # ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à case
            # ‡πÉ‡∏ä‡πâ os.path.basename ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÅ‡∏Ñ‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå ‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡∏û‡∏≤‡∏ò‡πÄ‡∏ï‡πá‡∏°
            if os.path.basename(filename).lower() == os.path.basename(wb.FullName).lower():
                print(f"üìÑ ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {filename} ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Excel ‚Äî ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡πá‡∏ö")
                wb.Close(False)  # False = ‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ã‡πâ‡∏≥
                return True
    except Exception as e:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏¥‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ Excel:", e)
    return False

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå Excel ‡∏û‡∏£‡πâ‡∏≠‡∏° retry ‡πÅ‡∏•‡∏∞‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡πá‡∏ö Excel ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
def save_excel_with_retry(wb, filename="Summary_Output.xlsx", max_retries=3):
    for attempt in range(max_retries):
        try:
            wb.save(filename)
            print(f"‚úÖ {filename} created successfully!")
            if platform.system() == "Windows":
                os.startfile(filename)
            return True
        except PermissionError:
            print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå {filename} ‡πÑ‡∏î‡πâ ‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Excel")
            print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏õ‡∏¥‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ó‡πá‡∏ö‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡πâ‡∏ô...")
            closed = close_excel_file_if_open(filename)
            if not closed:
                print("‚è≥ ‡∏£‡∏≠ 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà...")
            time.sleep(2)
    print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    return False


def create_excel_summary(data_list, transaction_info, filename="Summary_Output.xlsx"):
    """
    ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Excel ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà‡∏™‡∏π‡∏ï‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
    - data_list: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    - transaction_info: dict ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ (‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö, ‡∏à‡πà‡∏≤‡∏¢‡πÉ‡∏´‡πâ)
    """
    try:
        wb = Workbook()
        ws = wb.active
        ws.title = "‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î"

        # --- ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Font ‡πÅ‡∏•‡∏∞ Border ---
        thin_border = Border(left=Side(style='thin'), right=Side(style='thin'), top=Side(style='thin'), bottom=Side(style='thin'))
        thai_font = Font(name='TH Sarabun New', size=11)
        bold_thai_font = Font(name='TH Sarabun New', size=11, bold=True)
        center_align = Alignment(horizontal='center', vertical='center')
        left_align = Alignment(horizontal='left', vertical='center')
        right_align = Alignment(horizontal='right', vertical='center')
        top_center_align = Alignment(horizontal='center', vertical='top')

        # --- ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á ---
        # ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ Merge Cells ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡πÅ‡∏Ñ‡πà A ‡∏ñ‡∏∂‡∏á J
        ws.merge_cells('A1:J1')
        ws['A1'] = "‡πÄ‡∏•‡πà‡∏°‡∏ó‡∏µ‡πà.......... ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà..........."
        ws['A1'].font = bold_thai_font
        ws['A1'].alignment = right_align

        ws.merge_cells('A2:J2')
        ws['A2'] = "‡∏ä‡∏∑‡πà‡∏≠ ‡∏Ñ‡∏ì‡∏∞‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå"
        ws['A2'].font = bold_thai_font
        ws['A2'].alignment = center_align

        ws.merge_cells('A3:J3')
        ws['A3'] = "‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏õ‡∏µ 2568 ‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£ ‡∏Ñ‡∏ì‡∏∞‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Ø"
        ws['A3'].font = bold_thai_font
        ws['A3'].alignment = center_align
        
        # --- Headers ‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏¢‡πà‡∏≠‡∏¢ (‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£) ---
        ws.merge_cells('A4:A5') # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
        ws.merge_cells('B4:B5') # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        ws.merge_cells('C4:E4') # ‡∏£‡∏±‡∏ö
        ws.merge_cells('F4:H4') # ‡∏à‡πà‡∏≤‡∏¢
        ws.merge_cells('I4:J4') # ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ (‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏° J4 ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
        
        # Main headers text
        ws['A4'] = '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'
        ws['B4'] = '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'
        ws['C4'] = '‡∏£‡∏±‡∏ö'
        ws['F4'] = '‡∏à‡πà‡∏≤‡∏¢'
        ws['I4'] = '‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠'

        # Sub-headers for '‡∏£‡∏±‡∏ö'
        ws['C5'] = '‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà'
        ws['D5'] = '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô'
        ws['E5'] = '‡∏ö‡∏≤‡∏ó'

        # Sub-headers for '‡∏à‡πà‡∏≤‡∏¢'
        ws['F5'] = '‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà' # ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô "‡∏£‡∏ß‡∏°‡∏à‡πà‡∏≤‡∏¢" ‡πÅ‡∏ó‡∏ô
        ws['G5'] = '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô'
        ws['H5'] = '‡∏ö‡∏≤‡∏ó'

        # Sub-headers for '‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠'
        ws['I5'] = '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô'
        ws['J5'] = '‡∏ö‡∏≤‡∏ó'

        # Apply styles to headers (A4 to J5)
        for row_idx in range(4, 6):
            for col_idx in range(1, 11): # Columns A to J
                cell = ws.cell(row=row_idx, column=col_idx)
                cell.font = bold_thai_font
                cell.alignment = center_align
                cell.border = thin_border
        
        # --- ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå (‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠) ---
        col_widths = {
            'A': 15, # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
            'B': 45, # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
            'C': 15, 'D': 10, 'E': 12, # ‡∏£‡∏±‡∏ö(‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô, ‡∏ö‡∏≤‡∏ó)
            'F': 15, 'G': 10, 'H': 12, # ‡∏à‡πà‡∏≤‡∏¢(‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô, ‡∏ö‡∏≤‡∏ó)
            'I': 10, 'J': 12, # ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô, ‡∏ö‡∏≤‡∏ó)
        }
        for col_letter, width in col_widths.items():
            ws.column_dimensions[col_letter].width = width

        current_row = 6 # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ñ‡∏ß 6 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

        # --- ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° (purchase_date, received_from, invoice_no) ---
        # ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
        data_list_sorted = sorted(data_list, key=lambda x: (x[7], x[5], x[6])) 
        
        grouped_data = defaultdict(list)
        data_handler_instance = Data() 
        for item in data_list_sorted: # ‡πÉ‡∏ä‡πâ‡∏≠‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß
            # ‡πÉ‡∏ä‡πâ tuple (‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà, ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó, ‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà) ‡πÄ‡∏õ‡πá‡∏ô key ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°
            group_key = (item[7], item[5], item[6]) 
            grouped_data[group_key].append(item)

        # ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏™‡∏∞‡∏™‡∏°
        cumulative_balance_qty = 0
        cumulative_balance_baht = 0.0

        # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà (‡∏ã‡∏∂‡πà‡∏á‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ key ‡∏Ñ‡∏∑‡∏≠ (‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà, ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó, ‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà))
        for group_key, items_in_group in grouped_data.items():
            purchase_date, company_name, invoice_no = group_key 

            # ‡πÅ‡∏ñ‡∏ß "‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å"
            # A: ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡πÉ‡∏ä‡πâ purchase_date ‡∏à‡∏≤‡∏Å group_key)
            ws.cell(row=current_row, column=1, value=purchase_date).font = bold_thai_font
            ws.cell(row=current_row, column=1).alignment = center_align

            # B: ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
            ws.cell(row=current_row, column=2, value=f"‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å {company_name}").font = bold_thai_font
            ws.cell(row=current_row, column=2).alignment = left_align
            
            # C: ‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà (‡πÉ‡∏ä‡πâ invoice_no ‡∏à‡∏≤‡∏Å group_key)
            ws.cell(row=current_row, column=3, value=invoice_no).font = bold_thai_font
            ws.cell(row=current_row, column=3).alignment = center_align

            # D: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ) - ‡πÄ‡∏û‡∏¥‡πà‡∏° " ‡∏£‡∏Å."
            item_count_for_group = len(items_in_group) 
            ws.cell(row=current_row, column=4, value=f"{item_count_for_group} ‡∏£‡∏Å.").font = bold_thai_font
            ws.cell(row=current_row, column=4).alignment = center_align

            # E: ‡∏ö‡∏≤‡∏ó (‡∏£‡∏ß‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ) - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô * ‡∏£‡∏≤‡∏Ñ‡∏≤
            total_price_for_group_E = 0
            for item in items_in_group:
                quantity_numeric = data_handler_instance.parse_amount(item[2]) 
                price_per_item = item[4] 
                total_price_for_group_E += (quantity_numeric * price_per_item)

            cell_group_total_price_E = ws.cell(row=current_row, column=5, value=total_price_for_group_E)
            cell_group_total_price_E.font = bold_thai_font
            cell_group_total_price_E.number_format = '#,##0.00'
            cell_group_total_price_E.alignment = right_align

            # F, G, H (‡∏à‡πà‡∏≤‡∏¢) - ‡πÉ‡∏™‡πà‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ "-"
            ws.cell(row=current_row, column=6, value="-").font = thai_font
            ws.cell(row=current_row, column=6).alignment = center_align
            ws.cell(row=current_row, column=7, value="-").font = thai_font
            ws.cell(row=current_row, column=7).alignment = center_align
            ws.cell(row=current_row, column=8, value="-").font = thai_font
            ws.cell(row=current_row, column=8).alignment = center_align


            # I: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠) - ‡∏¢‡∏≠‡∏î‡∏™‡∏∞‡∏™‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
            cumulative_balance_qty += item_count_for_group
            ws.cell(row=current_row, column=9, value=f"{cumulative_balance_qty} ‡∏£‡∏Å.").font = bold_thai_font
            ws.cell(row=current_row, column=9).alignment = center_align

            # J: ‡∏ö‡∏≤‡∏ó (‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠) - ‡∏¢‡∏≠‡∏î‡∏™‡∏∞‡∏™‡∏°‡∏ö‡∏≤‡∏ó
            cumulative_balance_baht += total_price_for_group_E
            cell_group_total_price_J = ws.cell(row=current_row, column=10, value=cumulative_balance_baht) 
            cell_group_total_price_J.font = bold_thai_font
            cell_group_total_price_J.number_format = '#,##0.00'
            cell_group_total_price_J.alignment = right_align

            # Apply border to the entire row
            for col_idx in range(1, 11): # Columns A to J
                ws.cell(row=current_row, column=col_idx).border = thin_border
            current_row += 1
            
            # ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡πà‡∏≠‡∏¢‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏° (invoice)
            for item in items_in_group:
                # [0:name, 1:category, 2:amount, 3:date_needed, 4:price, 5:received_from, 6:invoice_no, 7: purchase_date]
                item_name = item[0]
                amount_str = item[2] # ‡πÄ‡∏ä‡πà‡∏ô "10 ‡∏î‡πâ‡∏≤‡∏°"
                price_per_item = item[4] # ‡πÄ‡∏ä‡πà‡∏ô 15.00
                
                # ‡πÅ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ô‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                quantity_numeric = data_handler_instance.parse_amount(amount_str)
                # ‡πÉ‡∏ä‡πâ regex ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏£‡∏ß‡∏°‡∏™‡∏£‡∏∞‡πÅ‡∏•‡∏∞‡∏ß‡∏£‡∏£‡∏ì‡∏¢‡∏∏‡∏Å‡∏ï‡πå)
                match = re.search(r'(\D+)$', amount_str.strip()) # ‡∏´‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏™‡∏ï‡∏£‡∏¥‡∏á
                unit = match.group(1).strip() if match else "" # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏°‡∏≤ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏ß‡πà‡∏≤‡∏á

                total_item_price = quantity_numeric * price_per_item

                # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏° format ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
                if quantity_numeric > 1:
                    item_display_text = f"-{item_name} {quantity_numeric} {unit}@{price_per_item:.2f}.- = {total_item_price:.2f}.-"
                else:
                    item_display_text = f"-{item_name} {quantity_numeric} {unit}@{price_per_item:.2f}.-"


                # A: ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà - ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á
                ws.cell(row=current_row, column=1, value="").font = thai_font
                ws.cell(row=current_row, column=1).alignment = center_align

                # B: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà)
                ws.cell(row=current_row, column=2, value=item_display_text).font = thai_font
                ws.cell(row=current_row, column=2).alignment = left_align

                # C, D, E (‡∏£‡∏±‡∏ö) - ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á
                ws.cell(row=current_row, column=3, value="").font = thai_font
                ws.cell(row=current_row, column=4, value="").font = thai_font
                ws.cell(row=current_row, column=5, value="").font = thai_font
                
                # F, G, H (‡∏à‡πà‡∏≤‡∏¢) - ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                ws.cell(row=current_row, column=6, value="").font = thai_font
                ws.cell(row=current_row, column=7, value="").font = thai_font
                ws.cell(row=current_row, column=8, value="").font = thai_font

                # I, J (‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠) - ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á
                ws.cell(row=current_row, column=9, value="").font = thai_font
                ws.cell(row=current_row, column=10, value="").font = thai_font

                for col_idx in range(1, 11): # Apply border to all cells in the row (A to J)
                    ws.cell(row=current_row, column=col_idx).border = thin_border
                
                current_row += 1

        # --- ‡πÅ‡∏ñ‡∏ß‡∏™‡∏£‡∏∏‡∏õ "‡∏à‡πà‡∏≤‡∏¢‡πÉ‡∏´‡πâ" ‡πÅ‡∏•‡∏∞ "‡∏£‡∏ß‡∏°‡∏à‡πà‡∏≤‡∏¢" ---
        current_row += 1 # ‡πÄ‡∏ß‡πâ‡∏ô 1 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
        
        # A: ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á)
        ws.cell(row=current_row, column=1, value="").font = thai_font
        ws.cell(row=current_row, column=1).alignment = center_align

        # B: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏à‡πà‡∏≤‡∏¢‡πÉ‡∏´‡πâ...)
        ws.cell(row=current_row, column=2, value=f"‡∏à‡πà‡∏≤‡∏¢‡πÉ‡∏´‡πâ {transaction_info['paid_to']}").font = bold_thai_font
        ws.cell(row=current_row, column=2).alignment = left_align

        # C, D, E (‡∏£‡∏±‡∏ö) - ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á
        ws.cell(row=current_row, column=3, value="").font = thai_font
        ws.cell(row=current_row, column=4, value="").font = thai_font
        ws.cell(row=current_row, column=5, value="").font = thai_font

        # G: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å cumulative_balance_qty ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° " ‡∏£‡∏Å." ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢)
        ws.cell(row=current_row, column=7, value=f"{cumulative_balance_qty} ‡∏£‡∏Å.").font = bold_thai_font
        ws.cell(row=current_row, column=7).alignment = center_align

        # H: ‡∏ö‡∏≤‡∏ó (‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å cumulative_balance_baht ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)
        ws.cell(row=current_row, column=8, value=cumulative_balance_baht).font = bold_thai_font
        ws.cell(row=current_row, column=8).number_format = '#,##0.00'
        ws.cell(row=current_row, column=8).alignment = right_align

        # I, J (‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠) - ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á
        ws.cell(row=current_row, column=9, value="").font = thai_font
        ws.cell(row=current_row, column=10, value="").font = thai_font

        for col_idx in range(1, 11): # A to J
            ws.cell(row=current_row, column=col_idx).border = thin_border
        
        # --- Save the workbook ---
        return save_excel_with_retry(wb, filename)
    except Exception as e:
        print(f"‚ùå Error creating Excel file: {e}")
        return False

def main():
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á instance ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏•‡∏≤‡∏™ Data
    data_handler = Data()

    # --- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ã‡πâ‡∏≥ ‡∏ß‡∏±‡∏ô‡∏ã‡πâ‡∏≥ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ô‡∏•‡∏∞‡πÉ‡∏ö‡∏£‡∏±‡∏ö ---

    # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 10/‡∏°‡∏¥.‡∏¢./68
    date_a = "10 ‡∏°‡∏¥.‡∏¢.68"
    company_a = "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏™‡∏¢‡∏≤‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡∏à‡∏≥‡∏Å‡∏±‡∏î"
    company_b = "‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå"

    # ‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà INV_A_001
    data_handler.appendlist("‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤‡πÄ‡∏Ñ‡∏°‡∏µ", "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", "5 ‡∏î‡πâ‡∏≤‡∏°", date_a, 20.00, company_a, "INV_A_001", date_a)
    data_handler.appendlist("‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡πÇ‡∏ô‡πâ‡∏ï", "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", "3 ‡πÄ‡∏•‡πà‡∏°", date_a, 15.00, company_a, "INV_A_001", date_a)
    
    # ‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà INV_A_002 (‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ô‡∏•‡∏∞‡πÉ‡∏ö‡∏£‡∏±‡∏ö)
    data_handler.appendlist("‡πÅ‡∏ü‡πâ‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£", "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", "10 ‡∏≠‡∏±‡∏ô", date_a, 25.00, company_a, "INV_A_002", date_a)
    data_handler.appendlist("‡∏¢‡∏≤‡∏á‡∏•‡∏ö", "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", "5 ‡∏Å‡πâ‡∏≠‡∏ô", date_a, 5.00, company_a, "INV_A_002", date_a)

    # ‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà INV_B_001
    data_handler.appendlist("‡πÄ‡∏ó‡∏õ‡πÉ‡∏™", "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", "2 ‡∏°‡πâ‡∏ß‡∏ô", date_a, 10.00, company_b, "INV_B_001", date_a)
    
    # ‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà INV_B_002 (‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ô‡∏•‡∏∞‡πÉ‡∏ö‡∏£‡∏±‡∏ö)
    data_handler.appendlist("‡∏Å‡∏≤‡∏ß‡πÅ‡∏ó‡πà‡∏á", "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", "5 ‡πÅ‡∏ó‡πà‡∏á", date_a, 8.00, company_b, "INV_B_002", date_a)
    data_handler.appendlist("‡πÑ‡∏°‡πâ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î", "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", "3 ‡∏≠‡∏±‡∏ô", date_a, 12.00, company_b, "INV_B_002", date_a)


    # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 15/‡∏°‡∏¥.‡∏¢./68
    date_b = "15 ‡∏°‡∏¥.‡∏¢. 68"
    company_c = "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á"
    company_d = "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏™‡∏¢‡∏≤‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡∏à‡∏≥‡∏Å‡∏±‡∏î" # ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ã‡πâ‡∏≥‡∏à‡∏≤‡∏Å date_a ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ô‡∏•‡∏∞‡∏ß‡∏±‡∏ô ‡∏Ñ‡∏ô‡∏•‡∏∞‡πÉ‡∏ö‡∏£‡∏±‡∏ö

    data_handler.appendlist("‡∏´‡∏•‡∏≠‡∏î‡πÑ‡∏ü LED", "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡πÑ‡∏ü‡∏ü‡πâ‡∏≤", "10 ‡∏´‡∏•‡∏≠‡∏î", date_b, 45.00, company_c, "INV_C_001", date_b)
    data_handler.appendlist("‡∏™‡∏≤‡∏¢‡πÑ‡∏ü", "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡πÑ‡∏ü‡∏ü‡πâ‡∏≤", "1 ‡∏°‡πâ‡∏ß‡∏ô", date_b, 200.00, company_c, "INV_C_001", date_b)
    data_handler.appendlist("‡πÄ‡∏°‡πâ‡∏≤‡∏™‡πå‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢", "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå", "1 ‡∏ä‡∏¥‡πâ‡∏ô", date_b, 350.00, company_d, "INV_D_001", date_b)

    # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 20/‡∏°‡∏¥.‡∏¢./68
    date_c = "20 ‡∏°‡∏¥.‡∏¢. 68"
    company_e = "‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå" # ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ã‡πâ‡∏≥‡∏à‡∏≤‡∏Å date_a ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ô‡∏•‡∏∞‡∏ß‡∏±‡∏ô ‡∏Ñ‡∏ô‡∏•‡∏∞‡πÉ‡∏ö‡∏£‡∏±‡∏ö
    company_f = "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏î"

    data_handler.appendlist("‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤‡πÄ‡∏à‡∏•", "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", "12 ‡∏î‡πâ‡∏≤‡∏°", date_c, 18.00, company_e, "INV_E_001", date_c)
    data_handler.appendlist("‡∏ô‡∏°‡∏™‡∏î", "‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏ö‡∏£‡∏¥‡πÇ‡∏†‡∏Ñ", "6 ‡∏Å‡∏•‡πà‡∏≠‡∏á", date_c, 30.00, company_f, "INV_F_001", date_c)

    data_handler.appendlist("‡πÄ‡∏°‡πâ‡∏≤‡∏™‡πå‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢", "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå", "1 ‡∏ä‡∏¥‡πâ‡∏ô", date_b, 350.00, company_d, "INV_D_099", date_b)

    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• transaction_info
    transaction_info = {
        "paid_to": "‡∏ô‡∏≤‡∏¢ ‡∏Å. (‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á)"
    }

    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Excel
    create_excel_summary(data_handler.list, transaction_info)
    print("‚úÖ ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Excel ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå")

if __name__ == "__main__":
    main()